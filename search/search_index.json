{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cryoeraser","text":"<p>cryoeraser is a Python package for erasing features in cryo electron microscopy data.</p> <p> </p> <p>Removing high-contrast image features such as ice contamination or gold fiducial markers can be useful for downstream processing.</p> <p>Masked image regions are replaced with noise drawn from a normal distribution matching  the local mean and a global standard deviation of an image.</p>"},{"location":"#installation","title":"Installation","text":"<p>cryoeraser is available on the Python package index.</p> <pre><code>pip install cryoeraser\n</code></pre> <p>We recommend working in a virtual environment.</p>"},{"location":"#usage","title":"Usage","text":"<pre><code>import tifffile\nfrom cryoeraser import erase_2d\n\nimage = tifffile.imread('examples/data/TS_01_0.0.tiff')\nmask = tifffile.imread('examples/data/TS_01_0.0_mask.tiff')\n\nerased = erase_2d(image=image, mask=mask)\n</code></pre> <p>An illustrated example is also provided.</p>"},{"location":"erase_2d_example/","title":"2d example","text":"<p>import packages</p> In\u00a0[1]: Copied! <pre>import tifffile\nimport cryoeraser\nfrom matplotlib import pyplot as plt\n</pre> import tifffile import cryoeraser from matplotlib import pyplot as plt <p>load the image and mask</p> In\u00a0[2]: Copied! <pre>image = tifffile.imread('data/TS_01_0.0.tiff')\nmask = tifffile.imread('data/TS_01_0.0_mask.tiff')\n\nprint('image:', image.shape, image.dtype)\nprint('mask:', mask.shape, mask.dtype)\n</pre> image = tifffile.imread('data/TS_01_0.0.tiff') mask = tifffile.imread('data/TS_01_0.0_mask.tiff')  print('image:', image.shape, image.dtype) print('mask:', mask.shape, mask.dtype) <pre>image: (480, 464) float16\nmask: (480, 464) bool\n</pre> <p>visualise data</p> In\u00a0[3]: Copied! <pre>fig, ax = plt.subplots(ncols=2)\nax[0].imshow(image, cmap='gray')\nax[1].imshow(mask, cmap='gray')\nax[0].title.set_text('image')\nax[1].title.set_text('mask')\nax[0].set(xticks=[], yticks=[])\nax[1].set(xticks=[], yticks=[])\nax\n</pre> fig, ax = plt.subplots(ncols=2) ax[0].imshow(image, cmap='gray') ax[1].imshow(mask, cmap='gray') ax[0].title.set_text('image') ax[1].title.set_text('mask') ax[0].set(xticks=[], yticks=[]) ax[1].set(xticks=[], yticks=[]) ax Out[3]: <pre>array([&lt;Axes: title={'center': 'image'}&gt;,\n       &lt;Axes: title={'center': 'mask'}&gt;], dtype=object)</pre> <p>erase masked regions</p> In\u00a0[4]: Copied! <pre>erased = cryoeraser.erase_2d(image=image, mask=mask)\nerased.shape\n</pre> erased = cryoeraser.erase_2d(image=image, mask=mask) erased.shape Out[4]: <pre>(480, 464)</pre> <p>visualise result</p> In\u00a0[5]: Copied! <pre>fig, ax = plt.subplots(ncols=3, figsize=(15, 45), dpi=300)\nax[0].imshow(image, cmap='gray')\nax[1].imshow(mask, cmap='gray')\nax[2].imshow(erased, cmap='gray')\nax[0].title.set_text('image')\nax[1].title.set_text('mask')\nax[2].title.set_text('erased')\nax[0].set(xticks=[], yticks=[])\nax[1].set(xticks=[], yticks=[])\nax[2].set(xticks=[], yticks=[])\nax\n</pre> fig, ax = plt.subplots(ncols=3, figsize=(15, 45), dpi=300) ax[0].imshow(image, cmap='gray') ax[1].imshow(mask, cmap='gray') ax[2].imshow(erased, cmap='gray') ax[0].title.set_text('image') ax[1].title.set_text('mask') ax[2].title.set_text('erased') ax[0].set(xticks=[], yticks=[]) ax[1].set(xticks=[], yticks=[]) ax[2].set(xticks=[], yticks=[]) ax Out[5]: <pre>array([&lt;Axes: title={'center': 'image'}&gt;,\n       &lt;Axes: title={'center': 'mask'}&gt;,\n       &lt;Axes: title={'center': 'erased'}&gt;], dtype=object)</pre>"},{"location":"erase_2d_example/#2d-example","title":"2d example\u00b6","text":""}]}